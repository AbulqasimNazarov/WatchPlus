@model Film

@{
    ViewData["Title"] = "Info about Film";
    var roundedRating = Math.Round(Model.Rate, 1);
    var IsAuthenticated = User.Identity?.IsAuthenticated ?? false;
    var hasRated = ViewBag.HasRated ?? false;
    var IsModerator = User.IsInRole("Moderator");
    var isBlocked = ViewBag.IsBlocked ?? false;
}

<div style="width: 1240px; margin: 0 auto;">
    <div
        style="display: flex; margin-top: 25px; background-color: rgb(233, 233, 236);box-shadow: 15px 15px 10px rgba(28, 27, 27, 0.45);">
        <div><img src="/Film/Image/@Model.Id" style="width: 600px; height: 600px"></div>
        <div style="margin-left: 25px;">
            <h1 style="margin-top: 20px;">@Model.Name</h1>
            <div style="font-size: 20px; word-break: break-word; overflow-wrap: anywhere;">@Model.Presentation</div>
            <div style="display: flex; margin-top: 20px">
                <h3>Star: </h3><a style="padding-top: 5px; padding-left: 20px; font-size: 20px"
                    href="https://ru.wikipedia.org/wiki/@Model.Star">@Model.Star</a>
            </div>
            <div style="display: flex;">
                <h3>Category: </h3>
                @foreach (var category in base.Model.Category)
                {
                    <div style="padding-top: 5px; padding-left: 20px; font-size: 20px">@category</div>

                }
            </div>
            <div style="margin-top: 50px; font-size: 40px;">Film Rating</div>
            @if (IsAuthenticated && !hasRated && !isBlocked)
            {
                <div>
                    <span class="star" data-value="1">☆</span>
                    <span class="star" data-value="2">☆</span>
                    <span class="star" data-value="3">☆</span>
                    <span class="star" data-value="4">☆</span>
                    <span class="star" data-value="5">☆</span>
                </div>
            }
            else if (IsAuthenticated && hasRated)
            {
                <div style="color: green; font-size: 20px;">You have already rated this film.</div>
            }
            <div id="averageRating" style="margin-top: 20px; font-size: 50px; color: rgb(183, 160, 160)"> Rating:
                @roundedRating</div>
        </div>
    </div>

    <div style="margin-top: 20px;">
        <iframe id="videoPlayer" src="@Model.TrailerVideo" width="100%" height="650" frameborder="0"
            allowfullscreen></iframe>
    </div>

    <div style="margin-top: 30px; font-size: 30px">Reviews</div>

    <section style="background-color: #eee;">

        @foreach (var comment in ViewBag.Comments)
        {
            <div class="container my-5 py-5">
                <div class="row d-flex justify-content-center">
                    <div class="col-md-12 col-lg-10 col-xl-8">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex flex-start align-items-center">

                                    <img class="rounded-circle shadow-1-strong me-3" src="/Identity/Image/@comment.UserId"
                                        alt="avatar" width="60" height="60" />
                                    <div>

                                        <h6 class="fw-bold text-primary mb-1">@comment.UserName</h6>
                                        <p class="text-muted small mb-0">
                                            Shared publicly @comment.CreatedDate
                                        </p>
                                    </div>

                                    @if (IsModerator)
                                    {
                                        <div>
                                            <li class="nav-item dropdown" style="list-style: none !important;">
                                                <a class="nav-link dropdown-toggle" href="#" role="button"
                                                    data-bs-toggle="dropdown" aria-expanded="false">
                                                    ...
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <button type="button" class="dropdown-item"
                                                            onclick="deleteComment('@comment.Id')">Delete</button>
                                                    </li>
                                                </ul>
                                            </li>
                                        </div>
                                    }
                                </div>


                                <p class="mt-3 mb-4 pb-2">
                                    @comment.Text
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

        @if (IsAuthenticated && !isBlocked)
        {
            <div class="container my-5 py-5">
                <div class="row d-flex justify-content-center">
                    <div class="col-md-12 col-lg-10 col-xl-8">
                        <div class="card">
                            <div class="card-footer py-3 border-0" style="background-color: #f8f9fa;">
                                <div class="d-flex flex-start w-100">

                                    @if (ViewBag.ImagePath != null)
                                    {
                                        <img class="rounded-circle shadow-1-strong me-3"
                                            src="/Identity/Image/@ViewBag.ImagePath" alt="avatar" width="40" height="40" />

                                    }
                                    else
                                    {
                                        <img class="rounded-circle shadow-1-strong me-3" src="/Assets/IMG/default-avatar.png"
                                            alt="avatar" width="40" height="40" />

                                    }
                                    <div data-mdb-input-init class="form-outline w-100">

                                        <textarea class="form-control" id="textAreaExample" rows="4"
                                            style="background: #fff;"></textarea>
                                        <label class="form-label" for="textAreaExample">Message</label>
                                    </div>
                                </div>
                                <div class="float-end mt-2 pt-1">

                                    <button type="button" data-mdb-button-init data-mdb-ripple-init
                                        class="btn btn-primary btn-sm" onclick="postComment()">Post comment</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (isBlocked)
        {
            <div class="container my-5 py-5">
                <div class="row d-flex justify-content-center">
                    <div class="col-md-12 col-lg-10 col-xl-8">
                        <div class="card">
                            <div class="card-footer py-3 border-0" style="background-color: #f8f9fa;">
                                <p class="text-muted">You are blocked from posting comments.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }

    </section>
</div>

<style>
    .star {
        font-size: 80px;
        cursor: pointer;
        color: gray;
    }

    .star.hover,
    .star.selected {
        color: gold;
    }
</style>

<script>
    async function deleteComment(commentId) {
        const response = await fetch(`/Film/DeleteComment/${commentId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const result = await response.json();
            if (result.success) {

                alert('Комментарий успешно удален');

                location.reload();
            } else {
                alert('error: ' + result.error);
            }
        } else {
            console.error('error HTTP: ' + response.status);
        }
    }


    async function postComment() {
        const text = document.getElementById('textAreaExample').value;
        const filmId = '@Model.Id';

        const response = await fetch('/Film/CommentFilm', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ FilmId: filmId, Text: text })
        });

        if (response.ok) {

            location.reload();
        } else {
            console.error('Failed to post comment');
        }
    }
    document.addEventListener('DOMContentLoaded', () => {
        const stars = document.querySelectorAll('.star');
        let selectedRating = 0;

        stars.forEach(star => {
            star.addEventListener('click', rateFilm);
            star.addEventListener('mouseover', highlightStars);
            star.addEventListener('mouseout', resetStars);
        });

        function highlightStars(event) {
            const value = event.target.getAttribute('data-value');
            stars.forEach(star => {
                if (star.getAttribute('data-value') <= value) {
                    star.classList.add('hover');
                } else {
                    star.classList.remove('hover');
                }
            });
        }

        function resetStars() {
            stars.forEach(star => {
                star.classList.remove('hover');
                if (star.getAttribute('data-value') <= selectedRating) {
                    star.classList.add('selected');
                } else {
                    star.classList.remove('selected');
                }
            });
        }

        async function rateFilm(event) {
            const value = event.target.getAttribute('data-value');
            const filmId = '@Model.Id';
            selectedRating = value;

            resetStars();

            const response = await fetch(`/Film/RateFilm`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ FilmId: filmId, Rating: value })
            });

            if (response.ok) {
                const data = await response.json();
                document.getElementById('averageRating').textContent = `Rating: ${data.newRating}`;
                document.querySelectorAll('.star').forEach(star => star.style.display = 'none');
                const messageDiv = document.createElement('div');
                messageDiv.style.color = 'green';
                messageDiv.style.fontSize = '20px';
                messageDiv.textContent = 'You have already rated this film.';
                document.querySelector('#averageRating').insertAdjacentElement('beforebegin', messageDiv);
                console.log('Rate sent successfully');
            } else {
                console.error('Failed to send rating');
            }
        }
    });
</script>
